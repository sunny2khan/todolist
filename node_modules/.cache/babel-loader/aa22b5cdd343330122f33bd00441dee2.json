{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS full course\\\\complete_react_2021\\\\reactsunnyapp\\\\src\\\\component\\\\Basics\\\\Resto.js\";\nimport React, { useState } from 'react';\nimport \"./sam.css\";\nimport Menu from './menuApi.js';\nimport MenuCard from './MenuCard.js';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst uniqueList = [...new Set(Menu.map(curElem => {\n  return curElem.category;\n})), \"All\"];\nconsole.log(uniqueList);\n\nconst Resto = () => {\n  const [menuData, setMenuData] = useState(Menu);\n  const [menuList, setMenuList] = useState(uniqueList);\n\n  const filterItem = category => {\n    if (category === \"All\") {\n      setMenuData(Menu);\n      return;\n    }\n\n    const updatedList = Menu.filter(curElem => {\n      return curElem.category === category;\n    });\n    setMenuData(updatedList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      filterItem: filterItem,\n      menuList: menuList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(MenuCard, {\n      menuData: menuData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Resto;","map":{"version":3,"names":["React","useState","Menu","MenuCard","Navbar","uniqueList","Set","map","curElem","category","console","log","Resto","menuData","setMenuData","menuList","setMenuList","filterItem","updatedList","filter"],"sources":["D:/React JS full course/complete_react_2021/reactsunnyapp/src/component/Basics/Resto.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport \"./sam.css\";\r\nimport Menu from './menuApi.js';\r\nimport MenuCard from './MenuCard.js';\r\nimport Navbar from './Navbar';\r\n\r\nconst uniqueList = [\r\n  ...new Set(\r\n  Menu.map((curElem) => {\r\n  return curElem.category;\r\n})\r\n),\r\n\"All\",\r\n];\r\n\r\nconsole.log(uniqueList);\r\n\r\nconst Resto = () => {\r\n\r\n const [menuData, setMenuData] = useState(Menu);\r\n const [menuList, setMenuList] = useState(uniqueList);\r\n\r\n const filterItem = (category) => {\r\n\r\n    if(category===\"All\") {\r\n      setMenuData(Menu);\r\n      return;\r\n    } \r\n\r\n\r\n   const updatedList = Menu.filter((curElem) => {\r\n     return curElem.category ===  category;\r\n   });\r\n\r\n   setMenuData(updatedList);\r\n };\r\n\r\n\r\n  return (\r\n    <>\r\n      \r\n\r\n       <Navbar filterItem = {filterItem} menuList = {menuList}/>\r\n       <MenuCard menuData={menuData} /> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Resto;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,UAAU,GAAG,CACjB,GAAG,IAAIC,GAAJ,CACHJ,IAAI,CAACK,GAAL,CAAUC,OAAD,IAAa;EACtB,OAAOA,OAAO,CAACC,QAAf;AACD,CAFC,CADG,CADc,EAMnB,KANmB,CAAnB;AASAC,OAAO,CAACC,GAAR,CAAYN,UAAZ;;AAEA,MAAMO,KAAK,GAAG,MAAM;EAEnB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACC,IAAD,CAAxC;EACA,MAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAACI,UAAD,CAAxC;;EAEA,MAAMY,UAAU,GAAIR,QAAD,IAAc;IAE9B,IAAGA,QAAQ,KAAG,KAAd,EAAqB;MACnBK,WAAW,CAACZ,IAAD,CAAX;MACA;IACD;;IAGF,MAAMgB,WAAW,GAAGhB,IAAI,CAACiB,MAAL,CAAaX,OAAD,IAAa;MAC3C,OAAOA,OAAO,CAACC,QAAR,KAAsBA,QAA7B;IACD,CAFmB,CAApB;IAIAK,WAAW,CAACI,WAAD,CAAX;EACD,CAbD;;EAgBC,oBACE;IAAA,wBAGG,QAAC,MAAD;MAAQ,UAAU,EAAID,UAAtB;MAAkC,QAAQ,EAAIF;IAA9C;MAAA;MAAA;MAAA;IAAA,QAHH,eAIG,QAAC,QAAD;MAAU,QAAQ,EAAEF;IAApB;MAAA;MAAA;MAAA;IAAA,QAJH;EAAA,gBADF;AAQD,CA7BD;;AA+BA,eAAeD,KAAf"},"metadata":{},"sourceType":"module"}