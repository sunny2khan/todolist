{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\complete_react_2021\\\\reactsunnyapp\\\\src\\\\component\\\\weather\\\\temp.js\";\n// https://api.openweathermap.org/data/2.5/weather?q=dhanbad&appid=12c095d850be2d67dd3412d25061fd89\nimport React, { useState, useEffect } from 'react';\nimport Weathercard from './weathercard';\nimport './saif.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Temp = () => {\n  const [searchValue, setSearchValue] = useState(\"dhanbad\");\n  const [tempInfo, setTempInfo] = useState({});\n\n  const getWeatherCondition = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=12c095d850be2d67dd3412d25061fd89`;\n      const res = await fetch(url);\n      const data = await res.json();\n      const {\n        temp,\n        humidity,\n        pressure\n      } = data.main;\n      const {\n        main: weathermood\n      } = data.weather[0];\n      const {\n        name\n      } = data;\n      const {\n        speed\n      } = data.wind;\n      const {\n        country,\n        sunrise,\n        sunset\n      } = data.sys;\n      const myNewWeatherInfo = {\n        temp,\n        humidity,\n        pressure,\n        weathermood,\n        name,\n        speed,\n        country,\n        sunrise,\n        sunset\n      };\n      setTempInfo(myNewWeatherInfo); // console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getWeatherCondition();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"search...\",\n          autoFocus: true,\n          id: \"search\",\n          className: \"searchTerm\",\n          value: searchValue,\n          onChange: e => setSearchValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"searchButton\",\n          type: \"button\",\n          onClick: getWeatherCondition,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Weathercard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Temp;","map":{"version":3,"names":["React","useState","useEffect","Weathercard","Temp","searchValue","setSearchValue","tempInfo","setTempInfo","getWeatherCondition","url","res","fetch","data","json","temp","humidity","pressure","main","weathermood","weather","name","speed","wind","country","sunrise","sunset","sys","myNewWeatherInfo","error","console","log","e","target","value"],"sources":["D:/React JS/complete_react_2021/reactsunnyapp/src/component/weather/temp.js"],"sourcesContent":["// https://api.openweathermap.org/data/2.5/weather?q=dhanbad&appid=12c095d850be2d67dd3412d25061fd89\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Weathercard from './weathercard';\r\nimport './saif.css';\r\n\r\nconst Temp = () => {\r\n  const [searchValue, setSearchValue] = useState(\"dhanbad\");\r\n  const [tempInfo, setTempInfo] = useState({});\r\n\r\n\r\n  const getWeatherCondition = async () => {\r\n    try {\r\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=12c095d850be2d67dd3412d25061fd89`;\r\n\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n\r\n      const { temp, humidity, pressure } = data.main;\r\n      const { main: weathermood } = data.weather[0];\r\n      const { name } = data;\r\n      const { speed } = data.wind;\r\n      const { country, sunrise, sunset } = data.sys;\r\n\r\n      const myNewWeatherInfo = {\r\n        temp,\r\n        humidity,\r\n        pressure,\r\n        weathermood,\r\n        name,\r\n        speed,\r\n        country,\r\n        sunrise,\r\n        sunset,\r\n      };\r\n\r\n      setTempInfo(myNewWeatherInfo);\r\n      // console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWeatherCondition();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrap\">\r\n        <div className=\"search\">\r\n          <input type=\"search\"\r\n            placeholder=\"search...\"\r\n            autoFocus\r\n            id=\"search\"\r\n            className=\"searchTerm\"\r\n            value={searchValue}\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n          />\r\n          <button className=\"searchButton\" type=\"button\"\r\n            onClick={getWeatherCondition}>\r\n            Search\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {/* {our temp card} */}\r\n\r\n      <Weathercard/>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Temp"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,YAAP;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EACjB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,SAAD,CAA9C;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;EAGA,MAAMQ,mBAAmB,GAAG,YAAY;IACtC,IAAI;MACF,IAAIC,GAAG,GAAI,qDAAoDL,WAAY,sDAA3E;MAEA,MAAMM,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;MACA,MAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;MAEA,MAAM;QAAEC,IAAF;QAAQC,QAAR;QAAkBC;MAAlB,IAA+BJ,IAAI,CAACK,IAA1C;MACA,MAAM;QAAEA,IAAI,EAAEC;MAAR,IAAwBN,IAAI,CAACO,OAAL,CAAa,CAAb,CAA9B;MACA,MAAM;QAAEC;MAAF,IAAWR,IAAjB;MACA,MAAM;QAAES;MAAF,IAAYT,IAAI,CAACU,IAAvB;MACA,MAAM;QAAEC,OAAF;QAAWC,OAAX;QAAoBC;MAApB,IAA+Bb,IAAI,CAACc,GAA1C;MAEA,MAAMC,gBAAgB,GAAG;QACvBb,IADuB;QAEvBC,QAFuB;QAGvBC,QAHuB;QAIvBE,WAJuB;QAKvBE,IALuB;QAMvBC,KANuB;QAOvBE,OAPuB;QAQvBC,OARuB;QASvBC;MATuB,CAAzB;MAYAlB,WAAW,CAACoB,gBAAD,CAAX,CAxBE,CAyBF;IACD,CA1BD,CA0BE,OAAOC,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD;EACF,CA9BD;;EAgCA3B,SAAS,CAAC,MAAM;IACdO,mBAAmB;EACpB,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,MAAf;MAAA,uBACE;QAAK,SAAS,EAAC,QAAf;QAAA,wBACE;UAAO,IAAI,EAAC,QAAZ;UACE,WAAW,EAAC,WADd;UAEE,SAAS,MAFX;UAGE,EAAE,EAAC,QAHL;UAIE,SAAS,EAAC,YAJZ;UAKE,KAAK,EAAEJ,WALT;UAME,QAAQ,EAAG2B,CAAD,IAAO1B,cAAc,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV;QANjC;UAAA;UAAA;UAAA;QAAA,QADF,eASE;UAAQ,SAAS,EAAC,cAAlB;UAAiC,IAAI,EAAC,QAAtC;UACE,OAAO,EAAEzB,mBADX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QATF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAmBE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QAnBF;EAAA,gBADF;AAwBD,CAjED;;AAmEA,eAAeL,IAAf"},"metadata":{},"sourceType":"module"}